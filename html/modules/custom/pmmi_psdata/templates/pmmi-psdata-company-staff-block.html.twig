{#
/**
 * @file
 * Theme implementation to display the PMMI Personify Committee block.
 *
 * Available variables:
 *
 * Committee block variables:
 * - data: The array of data.
 * - columns: Number of columns.
 * - rows: Number of rows.

 * @ingroup themeable
 */
#}
{% import _self as func %}
{% macro format_link(value, main_class, type, title = '') %}
    {% set result_class =  main_class ~ "-" ~ type %}
    {% if type == 'phone' %}
        <a href="tel:{{ value }}" class="{{ result_class }}">{{ value }}</a>
    {% elseif type == 'email' %}
        <a href="mailto:{{ value }}" class="{{ result_class }}">{{ value }}</a>
    {% else %}
        <span class="{{ result_class }}">{{ value }}</span>
    {% endif %}
{% endmacro %}
{% macro fill_multiply(values, main_class, display_key) %}
    {% import _self as func %}
    {% for key, value in values %}
        {% if display_key %}
            <div class="container-inline">
                <div>{{ key|capitalize }}:</div>
                <div>{{ func.format_link(value, main_class, key) }}</div>
            </div>
        {% else %}
            <div>{{ func.format_link(value, main_class, key) }}</div>
        {% endif %}
    {% endfor %}
{% endmacro %}
{% macro fill_multidim(collection, main_class, display_key) %}
    {% import _self as func %}
    {% for key, values in collection %}
        <div class="{{ main_class }}-{{ key|lower }}">
            {{ func.fill_multiply(values, main_class, display_key) }}
        </div>
    {% endfor %}
{% endmacro %}
{% macro fill_section(values, css_class, pattern, display_key) %}
    {% for key, value in values %}
        {% if pattern in key %}
            <div>{{ value }}</div>
        {% endif %}
    {% endfor %}
{% endmacro %}
{% set c, r, new_row, new_column = 1, 1, true, true %}
<div class="block company-staff-block" id="block--company-staff-block">
    {% if data %}
        <div class="company-section">
            {% if data.company.label %}
                <h3>{{ data.company.label }}</h3>
            {% endif %}
            <div class="company-section-info">
                {{ func.fill_section(data.company, 'addresse', 'address', false) }}
                {{ func.fill_section(data.company, 'formated-address', 'formated_postal', false) }}
                {{ func.fill_multidim(data.company.comm, 'communications', true) }}
            </div>
            <div class="company-section-info-staff">
                {% for member in data.company.staff %}
                    <div class="{{ class_key }} member-row-{{ r }}">
                        {% if member.job_title %}
                            <span>{{ member.job_title }}</span><br/>
                        {% endif %}
                        <strong>{{ member.label_name }}</strong><br/>
                        {% if member.comm %}
                            {{ func.fill_multiply(member.comm, 'communication', false) }}
                        {% endif %}
                    </div>
                {% endfor %}
            </div>
            {% if staff_enabled %}
                <div class="company-section-staff member-columns-{{ columns }} member-rows-{{ rows }}">
                    <h3>{{ staff_label }}</h3>
                    {% set c, r, new_row, new_column  = 1, 1, true, true %}
                    {% for member in data.staff %}
                        {% if new_row == true %}
                            {% set new_row = false %}
                            <div class="row">
                        {% endif %}
                        {% if new_column == true %}
                        {% set new_column = false %}
                        <div class="col-sm-{{ 12 / columns }} member-column-{{ c }}">
                        {% endif %}

                        <div class="{{ class_key }} member-row-{{ r }}">
                            <strong>{{ member.label_name }}</strong><br/>
                            {% if member.job_title %}
                                <span>{{ member.job_title }}</span><br/>
                            {% endif %}
                            {% if member.comm is iterable %}
                                {{ func.fill_multiply(member.comm, 'communication', false) }}
                            {% endif %}
                            </br>
                            </br>
                        </div>

                        {% if c <= columns and r <= rows %}
                            {% set r = r + 1 %}
                        {% endif %}

                        {% if r > rows %}
                            {% set c, r, new_column = c + 1, 1, true %}
                        {% endif %}

                        {% if c > columns or loop.last %}
                            {% set c, new_column, new_row = 1, true, true %}
                        {% endif %}

                        {% if new_column == true %}
                        </div>
                        {% endif %}
                        {% if new_row == true %}
                            </div>
                        {% endif %}

                    {% endfor %}
                </div>
            {% endif %}
        </div>
    {% endif %}
</div>
