<?php

/**
 * @file
 *
 * Main file of module.
 */

use Drupal\Core\Form\FormState;
use Drupal\page_manager\Entity\Page;
use Drupal\pmmi_page_manager_search\Entity\PageManagerSearch;

/**
 * Implements hook_entity_insert().
 */
function pmmi_page_manager_search_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'page_variant') {
    // Load Page of PageVariant.
    $page = $entity->getPage();

    // Check if need to index this PageVariant.
    if ($entity->get('third_party_settings')['index_page_variant'] === 1 && $page->id() !== 'site_template') {
      $render = \Drupal::entityTypeManager()
        ->getViewBuilder('page_variant')
        ->view($entity);

      $content = \Drupal::service('renderer')->renderPlain($render);
      $content = strip_tags($content);
      $content = trim(preg_replace('/\s+/', ' ', $content));

      PageManagerSearch::create([
        'pid' => $entity->id(),
        'title' => $page->label(),
        'content' => $content,
        'path_to_page' => $page->getPath(),
      ])->save();
    }
  }
}

/**
 * Implements hook_entity_update().
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function pmmi_page_manager_search_entity_update(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'page_variant') {
    // Load Page of PageVariant.
    $page = $entity->getPage();
    // Check if need to index this PageVariant.
    $index_page_variant = (
    isset($entity->get('third_party_settings')['index_page_variant'])
      ? $entity->get('third_party_settings')['index_page_variant']
      : 1
    );
    if ($index_page_variant === 1 && $page->id() !== 'site_template') {
      $existing_page_manager_search = \Drupal::entityQuery('pmmi_page_manager_search')
        ->condition('pid', $entity->id())
        ->execute();


      // Get rendered PageVariant content.
      $render = \Drupal::entityTypeManager()
        ->getViewBuilder('page_variant')
        ->view($entity);
      $content = \Drupal::service('renderer')->renderPlain($render);
      $content = strip_tags($content);
      $content = trim(preg_replace('/\s+/', ' ', $content));

      // Check if PageManagerSearch already exists.
      if (empty($existing_page_manager_search)) {
        PageManagerSearch::create([
          'pid' => $entity->id(),
          'title' => $page->label(),
          'content' => $content,
          'path_to_page' => $page->getPath(),
        ])->save();
      }
      else {
        // Load existing PageManagerSearch entity and then update it.
        $existing_page_manager_search_id = reset($existing_page_manager_search);
        $existing_page_manager_search_entity = PageManagerSearch::load($existing_page_manager_search_id);
        $existing_page_manager_search_entity->set('title', $page->label());
        $existing_page_manager_search_entity->set('path_to_page', $page->getPath());
        $existing_page_manager_search_entity->set('content', $content);
        $existing_page_manager_search_entity->save();
      }
    }
    else {
      // Remove related entity.
      $existing_page_manager_search = \Drupal::entityQuery('pmmi_page_manager_search')
        ->condition('pid', $entity->id())
        ->execute();

      if (!empty($existing_page_manager_search)) {
        $existing_page_manager_search_id = reset($existing_page_manager_search);
        $existing_page_manager_search_entity = PageManagerSearch::load($existing_page_manager_search_id);
        $existing_page_manager_search_entity->delete();
      }
    }
  }
}

/**
 * Implements hook_entity_delete().
 */
function pmmi_page_manager_search_entity_delete(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'page_variant') {
    $existing_page_manager_search = \Drupal::entityQuery('pmmi_page_manager_search')
      ->condition('pid', $entity->id())
      ->execute();

    if (!empty($existing_page_manager_search)) {
      $existing_page_manager_search_id = reset($existing_page_manager_search);
      $existing_page_manager_search_entity = PageManagerSearch::load($existing_page_manager_search_id);
      $existing_page_manager_search_entity->delete();
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function pmmi_page_manager_search_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Add new checkbox with config.
  if ($form_id === 'page_manage_variant_configure_form') {
    $cached_values = $form_state->getTemporaryValue('wizard');
    /** @var $page_variant \Drupal\page_manager\Entity\PageVariant */
    $page_variant = $cached_values['page_variant'];

    $index_page_variant = (
      isset($page_variant->get('third_party_settings')['index_page_variant'])
        ? $page_variant->get('third_party_settings')['index_page_variant']
        : 1
    );

    if ($cached_values['id'] !== 'site_template') {
      $form['variant_settings']['include_in_search_results'] = [
        '#type' => 'checkbox',
        '#title' => t('Index this page variant?'),
        '#weight' => 0,
        '#default_value' => $index_page_variant,
      ];

      $form['actions']['update_and_save']['#submit'][] = 'pmmi_page_manager_search_page_variant_submit';
      $form['actions']['finish']['#submit'][] = 'pmmi_page_manager_search_page_variant_submit';
    }
  }
}

/**
 * Add new settings for PageVariant.
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function pmmi_page_manager_search_page_variant_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $cached_values = $form_state->getTemporaryValue('wizard');
  /** @var $page_variant \Drupal\page_manager\Entity\PageVariant */
  $page_variant = $cached_values['page_variant'];
  $index_page_variant = $form_state->getValue('variant_settings')['include_in_search_results'];
  $page_variant->set('third_party_settings', ['index_page_variant' => $index_page_variant]);
  $page_variant->save();
}
