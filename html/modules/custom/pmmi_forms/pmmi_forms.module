<?php

/**
 * @file
 * Contains pmmi_forms.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function pmmi_forms_form_alter(array &$form, FormStateInterface $form_state) {
  switch ($form['#form_id']) {
    case 'block_content_image_slide_form':
    case 'block_content_image_slide_edit_form':
      $form['field_image']['#states'] = array(
        'invisible' => array(
          ':input[name="field_slide_type"]' => array('value' => 'video'),
        ),
      );
      $form['field_video']['#states'] = array(
        'invisible' => array(
          ':input[name="field_slide_type"]' => array('value' => 'image'),
        ),
      );
      array_unshift($form['#validate'], 'pmmi_forms_image_slide_validate');
      break;
  }
}

/**
 * Validation for image slide form.
 *
 * Do validation of video or image field based on selected slide type.
 */
function pmmi_forms_image_slide_validate(array &$form, FormStateInterface &$form_state) {
  $slide_type = $form_state->getValue('field_slide_type')[0]['value'];
  $element_name = ($slide_type == 'image') ? 'field_image' : 'field_video';
  $slide_value = $form_state->getValue($element_name);
  $element = $form[$element_name]['widget'];
  if (($slide_type == 'image' && empty($slide_value['target_id']))
  || ($slide_type == 'video' && empty($slide_value[0]['value']))) {
    $form_state->setError($element, t('@name field is required.', array('@name' => $element['#title'])));
  }
}
