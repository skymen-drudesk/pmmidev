<?php
/**
 * @file
 * The primary PHP file for this theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_block().
 */
function pmmi_bootstrap_preprocess_block(&$variables) {
  switch ($variables['base_plugin_id']) {
    case 'system_menu_block':
      // Add specific class to utility menus.
      if (strpos($variables['plugin_id'], 'utility-navigation') !== FALSE) {
        $variables['attributes']['class'][] = 'utility-navigation';
      }
      break;

    case 'pmmi_twitter_block':
      $url = Url::fromUri('https://www.twitter.com/@PMMIorg', [
        'attributes' => [
          'target' => '_blank',
        ],
      ]);
      $variables['subtitle'] = Link::fromTextAndUrl('@PMMIorg', $url);
      break;

    case 'pmmi_facebook_block':
      $page_id = $variables['configuration']['page_id'];
      $url = Url::fromUri('https://www.facebook.com/' . $page_id, [
        'attributes' => [
          'target' => '_blank',
        ],
      ]);
      $variables['subtitle'] = Link::fromTextAndUrl("facebook.com/{$page_id}", $url);
      break;
  }
}

/**
 * Implements hook_preprocess_ds_entity_view().
 */
function pmmi_bootstrap_preprocess_ds_entity_view(&$vars) {
  $attributes = new Attribute();
  $attributes['class'] = [
    Html::cleanCssIdentifier($vars['content']['#bundle']),
    'mode-' . Html::cleanCssIdentifier($vars['content']['#view_mode']),
  ];
  switch ($vars['content']['#bundle']) {
    case 'certification_test':
      $coming = $vars['content']['#node']->get('field_cert_test_coming')->value;
      if (!empty($coming)) {
        $attributes['class'][] = 'comming-soon';
      }
      break;

    case 'video':
      if ($vars['content']['#view_mode'] == 'default') {
        $node = &drupal_static(__FUNCTION__);
        if (!isset($node)) {
          $node = \Drupal::routeMatch()->getParameter('node');
        }
        if ($node) {
          $attributes['data-item-id'] = $vars['content']['#node']->id();
        }
      }
      break;

    case 'image_slide':
      if ($vars['content']['#view_mode'] == 'image_slider') {
        $slide_type = $vars['content']['#block_content']->get('field_slide_type')->value;
        $ds_config = $vars['content']['#ds_configuration'];
        $hide_slide = ($slide_type == 'image') ? 'field_video' : 'field_image';
        $key = array_search($hide_slide, $ds_config['regions']['image']);
        unset($vars['content']['image'][$key]);
      }
      break;

    case 'text_image':
    case 'text':
      $center = $vars['content']['#block_content']->get('field_center_text')->value;
      if ($center) {
        $attributes['class'][] = 'centered';
      }
      break;
  }

  $vars['content']['#attrs'] = $attributes;
}
