version: '2'
services:
  db:
    container_name: pmmi_dev_db
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: rootpasswd
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
      MYSQL_DATABASE: drupal
    volumes:
      - ./data:/var/lib/mysql
      - ./config/mysql/config:/etc/mysql/conf.d
    ports:
      - "3306:3306"
    expose:
      - "3306"

  web:
    container_name: pmmi_dev_web
    build:
      context: .
      dockerfile: Dockerfile-dev
    depends_on:
      - db
      - solr
    # Environment variables
    environment:
      TERM: xterm
      # Drupal settings
      DRUPAL_PROFILE: config_installer
      DRUPAL_SITE_NAME: PMMI
      DRUPAL_USER: admin
      DRUPAL_PASS: admin
      DRUPAL_DBURL: mysql://root:rootpasswd@mysql:3306/drupal
      PHP_XDEBUG_ENABLED: 1
      PHP_XDEBUG_AUTOSTART: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 1         # This is needed to respect remote.host setting bellow
      PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"
    ports:
      - "80:80" # If we use Varnish we can comment this line or delete.
    expose:
      - "80"
      - "9000"
    volumes:
      - .:/var/www
    links:
      - db
      - solr

  solr:
    image: solr:5.5-alpine
    volumes:
      - ./solr:/opt/solr/server/solr/d8
      - ./build/solr-conf/5.x:/solr-conf/conf
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - d8
      - /solr-conf
    ports:
      - "8003:8983"

  varnish:
    image: blackiceua/drupal-varnish
    depends_on:
      - web
    volumes:
      - ./build/varnish:/etc/varnish/
    environment:
      VARNISH_SECRET: secret
      VARNISH_BACKEND_HOST: web
      VARNISH_BACKEND_PORT: 80
      VARNISH_MEMORY_SIZE: 256M
      VARNISH_STORAGE_SIZE: 1024M
    ports:
      - "8004:6081" # HTTP Proxy for testing purposes. On production we need to change this line to 80:6081
      - "8005:6082" # Control terminal
